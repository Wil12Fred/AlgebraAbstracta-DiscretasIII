using namespace std;

struct coord{
  int x,y;
  coord(){}
  coord(int x,int y){
    this->x=x;
    this->y=y;
  }
};

class ruta{
  private:
    int clave;
  public:
    string dic;
    ruta(int clave){this->clave=clave;};
    int pos(int ,int);
    string encriptar(string );
    string desencriptar(string );
};

int ruta::pos(int x,int y){
  return x*clave+y;
}
/*
 * 0 4 8
 * 1 5 9
 * 2 6 x
 * 3 7 x */
string ruta::encriptar(string mns){
  int tam=mns.size()+(clave-mns.size()%clave)%clave;
  int anc=tam/clave;
  for (int i=mns.size();i<tam;i++) mns.push_back('x');
  cout << mns << endl;
  string enc;
  for (int y=0,x=anc-1;y<(clave+1)/2 && x>=(anc + 1)/2;y++,x--){
    for (int y1=y,x1=x;y1<clave-y;y1++){
      enc.push_back(mns[this->pos(x1,y1)]);
      cout << x1 << " " << y1 << " " << pos(x1,y1) << endl;
    }
    for (int y1=clave-y,x1=x;x1>0;x1--){
      enc.push_back(mns[this->pos(x1,y1)]);
      cout << x1 << " " << y1 << " " << pos(x1,y1) << endl;
    }
    for (int y1=clave-y,x1=y;y1>0;y1--){
      enc.push_back(mns[this->pos(x1,y1)]);
      cout << x1 << " " << y1 << " " << pos(x1,y1) << endl;
    }
    for (int y1=y,x1=x;x1<anc;x1++){
      enc.push_back(mns[this->pos(x1,y1)]);
      cout << x1 << " " << y1 << " " << pos(x1,y1) << endl;
    }
  }
  return enc;
}
